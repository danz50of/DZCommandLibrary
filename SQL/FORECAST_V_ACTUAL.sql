SELECT IFSAPP.INVENTORY_PART_API.GET_PLANNER_BUYER('MP', A.PART_NO) PLANNER,
IFSAPP.INVENTORY_PART_API.GET_SECOND_COMMODITY('MP', A.PART_NO) COMM_2,
IFSAPP.SALES_PART_API.GET_CATALOG_GROUP('MP', A.PART_NO) SALES_GROUP, 
A.PART_NO, B.LAST_MTH_UNITS LAST_MONTH_SALES_UNITS, B.LAST_MTH_75K LAST_MONTH_SALES_$, PERCENT_SALES_AT_75K LAST_MONTH_PERCENT_OF_GROUP, B.PRICE_75K_AVG AS "100K_AVG_PRICE", 
SUM(A.BUDGET_LAST_MONTH) BUDGET_LAST_MONTH_UNITS,
(SUM(A.BUDGET_LAST_MONTH) * B.PRICE_75K_AVG) BUDGET_LAST_MONTH_DOLLARS,
SUM(A.BUDGET_CURR_MONTH) BUDGET_CURR_MONTH_UNITS,
(SUM(A.BUDGET_CURR_MONTH) * B.PRICE_75K_AVG) BUDGET_CURR_MONTH_DOLLARS, 
sum(A.HISTORICAL_DEMAND) CURR_MONTH_SHIPPED_TO_DATE,
(SUM(A.HISTORICAL_DEMAND) * B.PRICE_75K_AVG) CURR_MONTH_SHIPPED_$_100K,
SUM(A.CURR_MONTH_OPEN_QTY) CURR_MONTH_OPEN_ORDER_QTY,
SUM(A.CURR_MONTH_OPEN_QTY * B.PRICE_75K_AVG) CURR_MONTH_OPEN_ORDER_$_100K,
(SUM(A.BUDGET_CURR_MONTH)) - (SUM(NVL(A.HISTORICAL_DEMAND,0)) + SUM(NVL(A.CURR_MONTH_OPEN_QTY,0))) CURR_MONTH_UNCONSUMED_UNITS,
(SUM(A.BUDGET_CURR_MONTH * B.PRICE_75K_AVG)) - (SUM(NVL(A.HISTORICAL_DEMAND,0)* B.PRICE_75K_AVG) + SUM(NVL(A.CURR_MONTH_OPEN_QTY,0)* B.PRICE_75K_AVG)) CURR_MONTH_UNCONSUMED_DOLLARS,
SUM(A.BUDGET_NEXT_MONTH) BUDGET_NEXT_MONTH_UNITS,
(SUM(A.BUDGET_NEXT_MONTH) * B.PRICE_75K_AVG) BUDGET_NEXT_MONTH_DOLLARS,
SUM(A.NEXT_MONTH_OPEN_QTY * B.PRICE_75K_AVG) NEXT_MONTH_OPEN_ORDER_$,
SUM(A.NEXT_MONTH_OPEN_QTY) NEXT_MONTH_OPEN_ORDER_QTY,
(SUM(A.BUDGET_NEXT_MONTH)) - (SUM(NVL(A.NEXT_MONTH_OPEN_QTY,0))) NEXT_MONTH_UNCONSUMED_UNITS,
(SUM(A.BUDGET_NEXT_MONTH * B.PRICE_75K_AVG)) - (SUM(NVL(A.NEXT_MONTH_OPEN_QTY,0) * B.PRICE_75K_AVG)) NEXT_MONTH_UNCONSUMED_DOLLARS,
SUM(A.BUDGET_MONTH_3) BUDGET_MONTH_3_UNITS,
SUM(A.BUDGET_MONTH_3 * B.PRICE_75K_AVG) BUDGET_MONTH_3_DOLLARS,
SUM(A.MONTH_3_OPEN_QTY) MONTH_3_OPEN_ORDER_QTY,
SUM(A.MONTH_3_OPEN_QTY * B.PRICE_75K_AVG) MONTH_3_OPEN_ORDER_$_100K,
(SUM(A.BUDGET_MONTH_3)) - (SUM(NVL(A.MONTH_3_OPEN_QTY,0))) MONTH_3_UNCONSUMED_UNITS,
(SUM(A.BUDGET_MONTH_3 * B.PRICE_75K_AVG)) - (SUM(NVL(A.MONTH_3_OPEN_QTY,0) * B.PRICE_75K_AVG)) MONTH_3_UNCONSUMED_DOLLARS
FROM(
select part_no, budget budget_last_month, null budget_curr_month, NULL HISTORICAL_DEMAND, null budget_next_month, null, NULL CURR_MONTH_OPEN_$, NULL CURR_MONTH_OPEN_QTY, NULL NEXT_MONTH_OPEN_$, NULL NEXT_MONTH_OPEN_QTY, null BUDGET_MONTH_3, NULL MONTH_3_OPEN_QTY 
from IFSAPP.PERIODICAL_TRANSACTION_TAB
where period_id = (
select period_id from IFSAPP.PERIOD_VERSION_DETAIL_TAB
where period_from_date = to_date('10/1/2011','mm/dd/yyyy')
and period_version = 1)
union
select part_no, null, budget budget_curr_month, historical_demand, null, null, NULL, NULL, NULL, NULL, null, NULL from IFSAPP.PERIODICAL_TRANSACTION_TAB
where period_id = (
select period_id from IFSAPP.PERIOD_VERSION_DETAIL_TAB
where period_from_date = to_date('11/1/2011','mm/dd/yyyy')
and period_version = 1)
union
select part_no, null, null,null, budget budget_next_month, null, NULL, NULL, NULL, NULL, null, NULL from IFSAPP.PERIODICAL_TRANSACTION_TAB
where period_id = (
select period_id from IFSAPP.PERIOD_VERSION_DETAIL_TAB
where period_from_date = to_date('12/1/2011','mm/dd/yyyy')
and period_version = 1)
union
select part_no, null, null,null, null, null, NULL, NULL, NULL, NULL, budget budget_month_3, NULL from IFSAPP.PERIODICAL_TRANSACTION_TAB
where period_id = (
select period_id from IFSAPP.PERIOD_VERSION_DETAIL_TAB
where period_from_date = to_date('1/1/2012','mm/dd/yyyy')
and period_version = 1)
union
select R.sales_part, null, null, null, null, null, SUM(R.open_$) CURR_MONTH_OPEN_$, SUM((R.BUY_QTY_DUE - R.QTY_SHIPPED)) CURR_MONTH_OPEN_QTY, NULL, NULL, null, NULL
FROM IFSINFO.PAST_DUE_ORD_ALL R
WHERE R.DUE_DATE BETWEEN to_date('11/1/2011','mm/dd/yyyy') AND to_date('11/30/2011','mm/dd/yyyy')
GROUP BY R.SALES_PART
UNION
select R.sales_part, null, null, null, null, null,NULL,NULL, SUM(R.open_$) NEXT_MONTH_OPEN_$, SUM((R.BUY_QTY_DUE - R.QTY_SHIPPED)) NEXT_MONTH_OPEN_QTY, null, NULL
FROM IFSINFO.PAST_DUE_ORD_ALL R
WHERE R.DUE_DATE BETWEEN to_date('12/1/2011','mm/dd/yyyy') AND to_date('12/31/2011','mm/dd/yyyy')
GROUP BY R.SALES_PART
UNION
select R.sales_part, null, null, null, null, null,NULL,NULL, SUM(R.open_$) NEXT_MONTH_OPEN_$, NULL, null, SUM((R.BUY_QTY_DUE - R.QTY_SHIPPED)) MONTH_3_OPEN_QTY
FROM IFSINFO.PAST_DUE_ORD_ALL R
WHERE R.DUE_DATE BETWEEN to_date('1/1/2012','mm/dd/yyyy') AND to_date('1/31/2012','mm/dd/yyyy')
GROUP BY R.SALES_PART
) A,
--IFSINFO.AVG_ACT_75K_JOIN_2MO_IAL B -- RUN FOR MONTH-END FORECAST V ACTUAL
IFSINFO.AVG_ACT_75K_JOIN_IAL B -- RUN FOR USING THE CURRENT MONTH FORECAST V ACTUAL
WHERE A.PART_NO = B.PART 
GROUP BY PART_NO,
B.LAST_MTH_UNITS,
B.LAST_MTH_75K, 
PERCENT_SALES_AT_75K,
B.PRICE_75K_AVG



SELECT * FROM IFSINFO.AVG_ACT_75K_JOIN_2MO_IAL WHERE PART = 'CMJ455'




select * from IFSAPP.PERIODICAL_TRANSACTION_TAB WHERE PART_NO = 'AVL'